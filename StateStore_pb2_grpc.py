# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import StateStore_pb2 as StateStore__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class StateStoreStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReadStates = channel.unary_unary(
                '/data_provider_service.v1.StateStore/ReadStates',
                request_serializer=StateStore__pb2.ReadStatesRequest.SerializeToString,
                response_deserializer=StateStore__pb2.StateValues.FromString,
                )
        self.WriteStates = channel.unary_unary(
                '/data_provider_service.v1.StateStore/WriteStates',
                request_serializer=StateStore__pb2.WriteStatesRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SubscribeStates = channel.unary_stream(
                '/data_provider_service.v1.StateStore/SubscribeStates',
                request_serializer=StateStore__pb2.SubscribeStatesRequest.SerializeToString,
                response_deserializer=StateStore__pb2.StateStreamValues.FromString,
                )
        self.SubscribeStateChangeEvents = channel.unary_stream(
                '/data_provider_service.v1.StateStore/SubscribeStateChangeEvents',
                request_serializer=StateStore__pb2.SubscribeStateChangeEventsRequest.SerializeToString,
                response_deserializer=StateStore__pb2.StateEvent.FromString,
                )


class StateStoreServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ReadStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeStates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeStateChangeEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StateStoreServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReadStates': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadStates,
                    request_deserializer=StateStore__pb2.ReadStatesRequest.FromString,
                    response_serializer=StateStore__pb2.StateValues.SerializeToString,
            ),
            'WriteStates': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteStates,
                    request_deserializer=StateStore__pb2.WriteStatesRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SubscribeStates': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeStates,
                    request_deserializer=StateStore__pb2.SubscribeStatesRequest.FromString,
                    response_serializer=StateStore__pb2.StateStreamValues.SerializeToString,
            ),
            'SubscribeStateChangeEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeStateChangeEvents,
                    request_deserializer=StateStore__pb2.SubscribeStateChangeEventsRequest.FromString,
                    response_serializer=StateStore__pb2.StateEvent.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'data_provider_service.v1.StateStore', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StateStore(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ReadStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data_provider_service.v1.StateStore/ReadStates',
            StateStore__pb2.ReadStatesRequest.SerializeToString,
            StateStore__pb2.StateValues.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/data_provider_service.v1.StateStore/WriteStates',
            StateStore__pb2.WriteStatesRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/data_provider_service.v1.StateStore/SubscribeStates',
            StateStore__pb2.SubscribeStatesRequest.SerializeToString,
            StateStore__pb2.StateStreamValues.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeStateChangeEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/data_provider_service.v1.StateStore/SubscribeStateChangeEvents',
            StateStore__pb2.SubscribeStateChangeEventsRequest.SerializeToString,
            StateStore__pb2.StateEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
